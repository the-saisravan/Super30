{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cspthree\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww29200\viewh18400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Pattern
\f1\fs22 \cf2 1. Butterfly Pattern
\f0\fs24 \cf0 \
\
class solution\{\
    pattern(n)\
    \{\
        for(let i=0;i<n;i++)\
        \{\
            for(let j=1;j<=i+1;j++)\
               process.stdout.write("*")\
            for(let j=1;j<=(2*n-2)-2*i;j++)\
               process.stdout.write(" ");\
            for(let j=1;j<=i+1;j++)\
               process.stdout.write("*");\
            process.stdout.write("\\n");\
        \}\
\
    for(let i=1;i<n;i++)\
        \{\
            for(let j=1;j<=n-i;j++)\
                process.stdout.write("*");\
            for(let j=1;j<=2*i;j++)\
                process.stdout.write((" "));\
            for(let j=1;j<=n-i;j++)\
                process.stdout.write("*");\
            process.stdout.write("\\n");\
        \}\
    \}\
\}\
\
let N = prompt();\
let sol = new solution();\
sol.pattern(N);\
\
\
Pattern2: 
\f1\fs22 \cf2  Numeric Palindromic Pyramid\
\
 pattern(n) \{\
\
        for(let i=0;i<n;i++)\
        \{\
            for(let j=0;j<n-i-1;j++)\
               process.stdout.write(" ");\
            let num=1;\
            let breakpoint=(2*i+1)/2;\
            for(let j=1;j<=2*i+1;j++)\
            \{\
                process.stdout.write(num);\
                if(j<=breakpoint) num++;\
                else num--;\
            \}\
            for(let j=0;j<=n-i-1;j++)\
                process.stdout.write(" ")\
            process.stdout.write("\\n");\
        \}\
  \}\
\
\
\
}